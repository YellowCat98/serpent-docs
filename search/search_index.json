{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Serpent Docs Documentation for using the Serpent GD mod.","title":"Home"},{"location":"#serpent-docs","text":"Documentation for using the Serpent GD mod.","title":"Serpent Docs"},{"location":"getting-started/prerequisities/","text":"Prerequisities Before making mods, you need to first have some stuff installed, Which are: Geometry Dash: Serpent is a Geometry Dash mod. so you obviously would need the game you're trying to modify! Geode: Serpent is a mod powered using Geode SDK, you can get geode from https://geode-sdk.org! Serpent: In order to installed Serpent, you have to go into Geode and then you can download the latest version of Serpent, though as of 11/12/2024, Serpent is yet to be finished! so you'd have to get it from github for now. Python: To keep Serpent's size manageable, you need to have python itself installed on your device, you can get python from https://python.org. If you got all of these installed, you're ready to continue! Initializing an empty script In order to create an empty script, create a folder, this can be anywhere! inside this folder, there'll be two files. script.json : This is a json file which includes mod metadata, this is the required syntax for it: // (this is only in jsonc for explaining what each key does, note that your script.json must not have comments! (i think it should work fine though)) { \"serpent\": \"1.0.0\", // This is the version of Serpent that the script is made for. \"name\": \"Simple Script\", // This is the name for the script \"id\": \"simplescript_yellowcat98\", // This is the ID of the script to avoid collision between other scripts! \"developer\": \"YellowCat98\" // The developer of the script! } mod_id.py : This is the main script! note that it is required for it to have the same name as the ID otherwise it won't execute! (check the Script syntax section ) Now that you've set up the empty script, package it into a .zip file! please keep in mind that it is required for it to have the same filename as the ID otherwise your mod's script will not execute either (i think) Script syntax Your script is required to have a class (in which you guessed (probably not) must have the same name as the ID!!) Each class must have an instance of the built-in class script , which its constructor takes two arguments, which are: ID: the ID of your script! mainClass: your script's class. Syntax example: # Serpent binds all geode and cocos functions/classes into __main__, you do not need to import any modules. class simplescript_yellowcat98: def __init__(self): self.script = script(\"simplescript_yellowcat98\", self) if __name__ == \"__main__\": simplescript_yellowcat98() # Initailze an instance of simplescript_yellowcat98, this will be executed on startup. Now we have an empty mod! What can you do with it? nothing basically because uhh it does nothing other than initialize a new script, it should execute if it's enabled though.","title":"Prerequisities"},{"location":"getting-started/prerequisities/#prerequisities","text":"Before making mods, you need to first have some stuff installed, Which are: Geometry Dash: Serpent is a Geometry Dash mod. so you obviously would need the game you're trying to modify! Geode: Serpent is a mod powered using Geode SDK, you can get geode from https://geode-sdk.org! Serpent: In order to installed Serpent, you have to go into Geode and then you can download the latest version of Serpent, though as of 11/12/2024, Serpent is yet to be finished! so you'd have to get it from github for now. Python: To keep Serpent's size manageable, you need to have python itself installed on your device, you can get python from https://python.org. If you got all of these installed, you're ready to continue!","title":"Prerequisities"},{"location":"getting-started/prerequisities/#initializing-an-empty-script","text":"In order to create an empty script, create a folder, this can be anywhere! inside this folder, there'll be two files. script.json : This is a json file which includes mod metadata, this is the required syntax for it: // (this is only in jsonc for explaining what each key does, note that your script.json must not have comments! (i think it should work fine though)) { \"serpent\": \"1.0.0\", // This is the version of Serpent that the script is made for. \"name\": \"Simple Script\", // This is the name for the script \"id\": \"simplescript_yellowcat98\", // This is the ID of the script to avoid collision between other scripts! \"developer\": \"YellowCat98\" // The developer of the script! } mod_id.py : This is the main script! note that it is required for it to have the same name as the ID otherwise it won't execute! (check the Script syntax section ) Now that you've set up the empty script, package it into a .zip file! please keep in mind that it is required for it to have the same filename as the ID otherwise your mod's script will not execute either (i think)","title":"Initializing an empty script"},{"location":"getting-started/prerequisities/#script-syntax","text":"Your script is required to have a class (in which you guessed (probably not) must have the same name as the ID!!) Each class must have an instance of the built-in class script , which its constructor takes two arguments, which are: ID: the ID of your script! mainClass: your script's class. Syntax example: # Serpent binds all geode and cocos functions/classes into __main__, you do not need to import any modules. class simplescript_yellowcat98: def __init__(self): self.script = script(\"simplescript_yellowcat98\", self) if __name__ == \"__main__\": simplescript_yellowcat98() # Initailze an instance of simplescript_yellowcat98, this will be executed on startup. Now we have an empty mod! What can you do with it? nothing basically because uhh it does nothing other than initialize a new script, it should execute if it's enabled though.","title":"Script syntax"}]}